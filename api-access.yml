---
-  hosts: apic
   any_errors_fatal: true
   gather_facts: no

   vars:
     ansible_connection: local
     #ansible_python_interpreter: /usr/bin/python3
     #tenant: am-tn
     #vrf: am-vrf 
     
     bridgedomain:
       - { tn_name: 'am-tn-1', name: 'BD-101', status: created, vrf: 'am-vrf-1' }
       - { tn_name: 'am-tn-2', name: 'BD-102', status: created, vrf: 'am-vrf-1' }
       - { tn_name: 'am-tn-3', name: 'BD-103', status: created, vrf: 'am-vrf-1' }

   vars_prompt:
     - name: "apic_ip"
       prompt: "Enter APIC IP"
       default: 'sandboxapicdc.cisco.com'
       private: no

     - name: "user"
       prompt: "Enter your APIC Username"
       default: 'admin'
       unsafe: yes

     - name: "pass"
       prompt: "Enter your APIC Password"
       default: '!v3G@!4@Y'
       private: yes
       unsafe: yes

   tasks:
   - name: Set Credentials
     tags: always
     set_fact:
       cred: &cred
         host: "{{ inventory_hostname }}"
         username: "{{ user }}"
         password: "{{ pass }}"
         validate_certs: false



   - name: Create a tenant
     aci_rest:
       <<: *cred  
       path: api/mo/uni.json
       method: post
       content: {
                "fvTenant" : {
                    "attributes" : {
                        "name" : "1-quatsch"
                        }
                    }
                }
     loop: "{{ bridgedomain }}"
   
   
   - name: Create Application profile
     aci_rest:
       <<: *cred  
       path: api/mo/uni.json
       method: post
       content: {
                "fvAp" : {
                    "attributes" : {
                        "dn":"uni/tn-am-tn/ap-am-ap"
                        "name" : "am-ap"
                        "rn": "ap-am-ap"
                        "status": "created"
                        }
                    }
                }
 #    loop: "{{ bridgedomain }}"


#{"fvAp":{"attributes":{"dn":"uni/tn-am-tn/ap-am-ap","name":"am-ap","rn":"ap-am-ap","status":"created"},"children":[]}}
